/* tslint:disable */
/* eslint-disable */
/**
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ArticleCoverRelatedInner } from './ArticleCoverRelatedInner';
import {
    ArticleCoverRelatedInnerFromJSON,
    ArticleCoverRelatedInnerFromJSONTyped,
    ArticleCoverRelatedInnerToJSON,
    ArticleCoverRelatedInnerToJSONTyped,
} from './ArticleCoverRelatedInner';
import type { ArticleCoverFolder } from './ArticleCoverFolder';
import {
    ArticleCoverFolderFromJSON,
    ArticleCoverFolderFromJSONTyped,
    ArticleCoverFolderToJSON,
    ArticleCoverFolderToJSONTyped,
} from './ArticleCoverFolder';

/**
 * 
 * @export
 * @interface ArticleCover
 */
export interface ArticleCover {
    /**
     * 
     * @type {number}
     * @memberof ArticleCover
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    documentId?: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    alternativeText?: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    caption?: string;
    /**
     * 
     * @type {number}
     * @memberof ArticleCover
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof ArticleCover
     */
    height?: number;
    /**
     * 
     * @type {any}
     * @memberof ArticleCover
     */
    formats?: any | null;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    ext?: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    mime?: string;
    /**
     * 
     * @type {number}
     * @memberof ArticleCover
     */
    size?: number;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    previewUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    provider?: string;
    /**
     * 
     * @type {any}
     * @memberof ArticleCover
     */
    providerMetadata?: any | null;
    /**
     * 
     * @type {Array<ArticleCoverRelatedInner>}
     * @memberof ArticleCover
     */
    related?: Array<ArticleCoverRelatedInner>;
    /**
     * 
     * @type {ArticleCoverFolder}
     * @memberof ArticleCover
     */
    folder?: ArticleCoverFolder;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    folderPath?: string;
    /**
     * 
     * @type {Date}
     * @memberof ArticleCover
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ArticleCover
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ArticleCover
     */
    publishedAt?: Date;
    /**
     * 
     * @type {ArticleCoverRelatedInner}
     * @memberof ArticleCover
     */
    createdBy?: ArticleCoverRelatedInner;
    /**
     * 
     * @type {ArticleCoverRelatedInner}
     * @memberof ArticleCover
     */
    updatedBy?: ArticleCoverRelatedInner;
    /**
     * 
     * @type {string}
     * @memberof ArticleCover
     */
    locale?: string;
    /**
     * 
     * @type {Array<ArticleCoverRelatedInner>}
     * @memberof ArticleCover
     */
    localizations?: Array<ArticleCoverRelatedInner>;
}

/**
 * Check if a given object implements the ArticleCover interface.
 */
export function instanceOfArticleCover(value: object): value is ArticleCover {
    return true;
}

export function ArticleCoverFromJSON(json: any): ArticleCover {
    return ArticleCoverFromJSONTyped(json, false);
}

export function ArticleCoverFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArticleCover {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'documentId': json['documentId'] == null ? undefined : json['documentId'],
        'name': json['name'] == null ? undefined : json['name'],
        'alternativeText': json['alternativeText'] == null ? undefined : json['alternativeText'],
        'caption': json['caption'] == null ? undefined : json['caption'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
        'formats': json['formats'] == null ? undefined : json['formats'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'ext': json['ext'] == null ? undefined : json['ext'],
        'mime': json['mime'] == null ? undefined : json['mime'],
        'size': json['size'] == null ? undefined : json['size'],
        'url': json['url'] == null ? undefined : json['url'],
        'previewUrl': json['previewUrl'] == null ? undefined : json['previewUrl'],
        'provider': json['provider'] == null ? undefined : json['provider'],
        'providerMetadata': json['provider_metadata'] == null ? undefined : json['provider_metadata'],
        'related': json['related'] == null ? undefined : ((json['related'] as Array<any>).map(ArticleCoverRelatedInnerFromJSON)),
        'folder': json['folder'] == null ? undefined : ArticleCoverFolderFromJSON(json['folder']),
        'folderPath': json['folderPath'] == null ? undefined : json['folderPath'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'publishedAt': json['publishedAt'] == null ? undefined : (new Date(json['publishedAt'])),
        'createdBy': json['createdBy'] == null ? undefined : ArticleCoverRelatedInnerFromJSON(json['createdBy']),
        'updatedBy': json['updatedBy'] == null ? undefined : ArticleCoverRelatedInnerFromJSON(json['updatedBy']),
        'locale': json['locale'] == null ? undefined : json['locale'],
        'localizations': json['localizations'] == null ? undefined : ((json['localizations'] as Array<any>).map(ArticleCoverRelatedInnerFromJSON)),
    };
}

export function ArticleCoverToJSON(json: any): ArticleCover {
    return ArticleCoverToJSONTyped(json, false);
}

export function ArticleCoverToJSONTyped(value?: ArticleCover | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'documentId': value['documentId'],
        'name': value['name'],
        'alternativeText': value['alternativeText'],
        'caption': value['caption'],
        'width': value['width'],
        'height': value['height'],
        'formats': value['formats'],
        'hash': value['hash'],
        'ext': value['ext'],
        'mime': value['mime'],
        'size': value['size'],
        'url': value['url'],
        'previewUrl': value['previewUrl'],
        'provider': value['provider'],
        'provider_metadata': value['providerMetadata'],
        'related': value['related'] == null ? undefined : ((value['related'] as Array<any>).map(ArticleCoverRelatedInnerToJSON)),
        'folder': ArticleCoverFolderToJSON(value['folder']),
        'folderPath': value['folderPath'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'publishedAt': value['publishedAt'] == null ? undefined : ((value['publishedAt']).toISOString()),
        'createdBy': ArticleCoverRelatedInnerToJSON(value['createdBy']),
        'updatedBy': ArticleCoverRelatedInnerToJSON(value['updatedBy']),
        'locale': value['locale'],
        'localizations': value['localizations'] == null ? undefined : ((value['localizations'] as Array<any>).map(ArticleCoverRelatedInnerToJSON)),
    };
}

