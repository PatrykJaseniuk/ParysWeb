/* tslint:disable */
/* eslint-disable */
/**
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SharedSeoComponent } from './SharedSeoComponent';
import {
    SharedSeoComponentFromJSON,
    SharedSeoComponentFromJSONTyped,
    SharedSeoComponentToJSON,
    SharedSeoComponentToJSONTyped,
} from './SharedSeoComponent';
import type { ArticleRequestDataCover } from './ArticleRequestDataCover';
import {
    ArticleRequestDataCoverFromJSON,
    ArticleRequestDataCoverFromJSONTyped,
    ArticleRequestDataCoverToJSON,
    ArticleRequestDataCoverToJSONTyped,
} from './ArticleRequestDataCover';

/**
 * 
 * @export
 * @interface GlobalRequestData
 */
export interface GlobalRequestData {
    /**
     * 
     * @type {string}
     * @memberof GlobalRequestData
     */
    siteName: string;
    /**
     * 
     * @type {ArticleRequestDataCover}
     * @memberof GlobalRequestData
     */
    favicon?: ArticleRequestDataCover;
    /**
     * 
     * @type {string}
     * @memberof GlobalRequestData
     */
    siteDescription: string;
    /**
     * 
     * @type {SharedSeoComponent}
     * @memberof GlobalRequestData
     */
    defaultSeo?: SharedSeoComponent;
    /**
     * 
     * @type {string}
     * @memberof GlobalRequestData
     */
    locale?: string;
    /**
     * 
     * @type {Array<ArticleRequestDataCover>}
     * @memberof GlobalRequestData
     */
    localizations?: Array<ArticleRequestDataCover>;
}

/**
 * Check if a given object implements the GlobalRequestData interface.
 */
export function instanceOfGlobalRequestData(value: object): value is GlobalRequestData {
    if (!('siteName' in value) || value['siteName'] === undefined) return false;
    if (!('siteDescription' in value) || value['siteDescription'] === undefined) return false;
    return true;
}

export function GlobalRequestDataFromJSON(json: any): GlobalRequestData {
    return GlobalRequestDataFromJSONTyped(json, false);
}

export function GlobalRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'siteName': json['siteName'],
        'favicon': json['favicon'] == null ? undefined : ArticleRequestDataCoverFromJSON(json['favicon']),
        'siteDescription': json['siteDescription'],
        'defaultSeo': json['defaultSeo'] == null ? undefined : SharedSeoComponentFromJSON(json['defaultSeo']),
        'locale': json['locale'] == null ? undefined : json['locale'],
        'localizations': json['localizations'] == null ? undefined : ((json['localizations'] as Array<any>).map(ArticleRequestDataCoverFromJSON)),
    };
}

export function GlobalRequestDataToJSON(json: any): GlobalRequestData {
    return GlobalRequestDataToJSONTyped(json, false);
}

export function GlobalRequestDataToJSONTyped(value?: GlobalRequestData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'siteName': value['siteName'],
        'favicon': ArticleRequestDataCoverToJSON(value['favicon']),
        'siteDescription': value['siteDescription'],
        'defaultSeo': SharedSeoComponentToJSON(value['defaultSeo']),
        'locale': value['locale'],
        'localizations': value['localizations'] == null ? undefined : ((value['localizations'] as Array<any>).map(ArticleRequestDataCoverToJSON)),
    };
}

